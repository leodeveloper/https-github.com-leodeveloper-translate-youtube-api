{
    "source": "y-FlANhhNiA",
    "youtubelink": "https://www.youtube.com/watch?v=y-FlANhhNiA",
    "t_english": "- [Instructor] Have you ever tried to make your print output a bit more descriptive like this, only to get a type error? Why does that happen and how do we fix it? Let's put our debugging skills to work. We saw that my program last worked when I was just printing the average score. It's only when I tried to add this string at the front that I started getting an error. This error message tells me the computer's having trouble concatenating a string with a float. My average quiz score is a string, and the variable average score contains the value 89.5, which is a float, and we know that computers can't add strings and floats together. They can only concatenate strings and strings or add some combination of integers and floats. Okay, so we know why we're getting that error, but what can we do about it? We, as the programmers, need to help the computer out here. The computer is very stubborn about its data types matching, and we can't change that, but we can change our values to be different data types. This is called type casting where we convert or cast a value from one data type to another data type. To cast a value to a string, we use the string function. Remember that a function takes in an input value, performs some actions on it, and then returns out an output value. With the string function, our input value is the value that we want to cast to a string, and our output value is that input value as a string. Casting a float or an integer to a string is pretty straightforward. It's just as if we put quotation marks around it. Back to our program, all we have to do is call the string function on average score. Then that float value 89.5 that the average score variable contains, will be cast to the string 8 9.5. If we ignore the variable for a second, this is the same as saying plus 89.5, which does give a type error versus string 8 9.5, which doesn't give a type error. Once we have this expression with two strings, the computer can just concatenate them. What if I wanna see how my next quiz score will affect my average? I might add an input prompt here to let me enter in different scores. So I update my average score calculation to include that new score, and now I'm getting a type error again. That's because the output value that the input function returns is always a string even if what the user typed kind of looks like a number. That means over here on the second line, when I'm trying to add new score, I am once again adding floats and strings. Instead, I want that quiz score to be an integer so I can do some math with it. To cast a value to an integer, we use the INT function. If I start with a string value like eight, nine, and I cast it to an integer, I am effectively just removing the quotation marks around it. So now I have 89. Do you see any problems here? Well, based on the previous quizzes, it seems that we support half points, like 89.5 might be a quiz score, and 89.5 is a float, not an integer. If I enter 89.5 at the prompt, we get a value error because we're trying to cast the string 8 9.5 to an integer. This means that we probably shouldn't be casting to an integer. Instead, we should cast to a float. To cast a value to a float, we use the float function. We might also move that typecast up here, so the value is already converted to a float before it's stored in the variable new score. Then we don't have to remember later to cast the value of new score to a float anytime we access it. Put that all together and we can cast values using the string function, the int function, and the float function. Also, note, there is a bool function that converts values to booleans. If we try and cast values that just don't make sense, as you saw, we get a value error. This is like if I tried to cast the string banana to an integer or the string 9.9.9 to a float. It's just not possible in any meaningful way. Like what should banana be as an integer? I don't know. Now what about casting a float to an integer? It turns out this just chops the decimal portion off. So 3.8 becomes three. We're taking the floor, or the lower closest integer. So next time you see a type error in your program, check the data types in your expressions and make sure they match strings with strings and integer and floats with integers and floats. If you need those values to be a different data type, you can always cast them.\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
    "t_urdu": "- [انسٹرکٹر] کیا آپ نے کبھی\nاپنے پرنٹ آؤٹ پٹ کو کچھ زیادہ وضاحتی بنانے کی کوشش کی ہے،\nصرف ٹائپ ایرر حاصل کرنے کے لیے؟ ایسا کیوں ہوتا ہے اور ہم اسے کیسے ٹھیک کرتے ہیں؟ آئیے اپنی ڈیبگنگ کی مہارتوں کو کام پر لگائیں۔ ہم نے دیکھا کہ میرا پروگرام آخری مرتبہ کام کرتا تھا جب میں صرف\nاوسط سکور پرنٹ کر رہا تھا۔ یہ تب ہی ہے جب میں نے\nاس سٹرنگ کو فرنٹ میں شامل کرنے کی کوشش کی تھی کہ مجھے غلطی ہونے لگی۔ یہ ایرر میسج مجھے بتاتا ہے کہ\nکمپیوٹر کو فلوٹ کے ساتھ سٹرنگ کو جوڑنے میں دشواری ہو رہی ہے۔ میرا اوسط کوئز سکور ایک سٹرنگ ہے، اور متغیر اوسط\nسکور میں ویلیو 89.5 ہے، جو ایک فلوٹ ہے، اور ہم جانتے ہیں کہ کمپیوٹر\nسٹرنگز اور فلوٹس کو ایک ساتھ نہیں جوڑ سکتے ہیں۔ وہ صرف\nتاروں اور تاروں کو جوڑ سکتے ہیں یا\nانٹیجرز اور فلوٹس کا کچھ مجموعہ شامل کر سکتے ہیں۔ ٹھیک ہے، تو ہم جانتے ہیں کہ\nہمیں یہ غلطی کیوں ہو رہی ہے، لیکن ہم اس کے بارے میں کیا کر سکتے ہیں؟ ہمیں، پروگرامرز کے طور پر،\nیہاں کمپیوٹر کی مدد کرنے کی ضرورت ہے۔ کمپیوٹر\nاپنے ڈیٹا کی اقسام کے ملاپ کے بارے میں بہت ضدی ہے، اور ہم اسے تبدیل نہیں کر سکتے، لیکن ہم اپنی اقدار کو\nمختلف ڈیٹا کی اقسام میں تبدیل کر سکتے ہیں۔ اسے ٹائپ کاسٹنگ کہا جاتا ہے\nجہاں ہم کسی قدر کو ایک ڈیٹا\nٹائپ سے دوسری ڈیٹا ٹائپ میں تبدیل یا کاسٹ کرتے ہیں۔ سٹرنگ کو ویلیو کاسٹ کرنے کے لیے،\nہم سٹرنگ فنکشن استعمال کرتے ہیں۔ یاد رکھیں کہ ایک فنکشن ان\nپٹ ویلیو لیتا ہے، اس پر کچھ ایکشن کرتا ہے، اور پھر آؤٹ پٹ ویلیو واپس کرتا ہے۔ سٹرنگ فنکشن کے ساتھ،\nہماری ان پٹ ویلیو وہ ویلیو ہے جسے ہم سٹرنگ میں ڈالنا چاہتے ہیں،\nاور ہماری آؤٹ پٹ ویلیو وہ ان پٹ ویلیو ہے جو بطور سٹرنگ ہے۔ سٹرنگ میں فلوٹ یا انٹیجر ڈالنا کافی سیدھا ہے۔ یہ بالکل ایسا ہی ہے جیسے ہم\nاس کے ارد گرد کوٹیشن مارکس لگاتے ہیں۔ ہمارے پروگرام پر واپس، ہمیں صرف اسٹرنگ\nفنکشن کو اوسط سکور پر کال کرنا ہے۔ پھر وہ فلوٹ ویلیو 89.5 جو اوسط سکور متغیر پر مشتمل ہے، سٹرنگ 8 9.5 پر ڈالی جائے گی۔ اگر ہم ایک سیکنڈ کے لیے متغیر کو نظر انداز کرتے ہیں، تو\nیہ پلس 89.5 کہنے جیسا ہی ہے، جو\nسٹرنگ 8 9.5 کے مقابلے میں ٹائپ ایرر دیتا ہے، جو ٹائپ ایرر نہیں دیتا۔ ایک بار جب ہمارے پاس یہ\nاظہار دو تاروں کے ساتھ ہوتا ہے، تو کمپیوٹر صرف ان کو جوڑ سکتا ہے۔ اگر میں یہ دیکھنا چاہتا ہوں کہ میرا اگلا کوئز اسکور میری اوسط کو کیسے متاثر کرے گا؟ میں مختلف سکور میں داخل ہونے کے لیے یہاں ایک ان پٹ پرامپٹ شامل کر سکتا ہوں۔ اس لیے میں اس نئے اسکور کو\nشامل کرنے کے لیے اپنے اوسط سکور کے حساب کو اپ ڈیٹ کرتا ہوں، اور اب مجھے\nدوبارہ ٹائپ ایرر ہو رہا ہے۔ اس کی وجہ یہ ہے کہ آؤٹ پٹ ویلیو جو ان پٹ فنکشن\nلوٹاتا ہے وہ ہمیشہ ایک سٹرنگ ہوتی ہے چاہے صارف نے جو ٹائپ کیا ہو وہ\nایک نمبر کی طرح لگتا ہے۔ اس کا مطلب ہے یہاں\nدوسری لائن پر، جب میں نیا سکور شامل کرنے کی کوشش کر رہا ہوں، میں ایک بار\nپھر فلوٹس اور سٹرنگز شامل کر رہا ہوں۔  اس کے بجائے، میں چاہتا ہوں کہ وہ کوئز\nاسکور ایک عدد عدد ہو تاکہ میں اس کے ساتھ کچھ ریاضی کر سکوں۔ ایک عدد میں قدر ڈالنے کے لیے،\nہم INT فنکشن استعمال کرتے ہیں۔ اگر میں\nآٹھ، نو جیسی سٹرنگ ویلیو کے ساتھ شروع کرتا ہوں، اور میں اسے ایک عدد پر ڈالتا ہوں، تو میں مؤثر طریقے سے صرف اس کے اردگرد کے کوٹیشن مارکس کو ہٹا رہا ہوں۔ تو اب میرے پاس 89 ہے۔ کیا آپ کو یہاں کوئی مسئلہ نظر آتا ہے؟ ٹھیک ہے، پچھلے کوئز کی بنیاد پر، ایسا لگتا ہے کہ ہم آدھے پوائنٹس کو سپورٹ کرتے ہیں، جیسے 89.5 کوئز سکور ہو سکتا ہے، اور 89.5 ایک فلوٹ ہے، انٹیجر نہیں۔ اگر میں پرامپٹ پر 89.5 درج کرتا ہوں، تو\nہمیں ایک قدر کی خرابی ملتی ہے کیونکہ ہم\nسٹرنگ 8 9.5 کو انٹیجر میں ڈالنے کی کوشش کر رہے ہیں۔ اس کا مطلب یہ ہے کہ ہمیں شاید کسی انٹیجر پر\nکاسٹ نہیں کرنا چاہیے۔  اس کے بجائے، ہمیں ایک فلوٹ پر ڈالنا چاہئے. فلوٹ پر ویلیو ڈالنے کے لیے،\nہم فلوٹ فنکشن استعمال کرتے ہیں۔ ہم اس ٹائپ کاسٹ کو یہاں بھی منتقل کر سکتے ہیں، اس لیے ویلیو متغیر نئے سکور میں محفوظ ہونے سے پہلے ہی\nفلوٹ میں تبدیل ہو جاتی ہے۔ \n پھر جب بھی ہم اس تک رسائی حاصل کرتے ہیں تو ہمیں\n نئے اسکور کی قدر کو فلوٹ پر ڈالنا بعد میں یاد رکھنے کی ضرورت نہیں ہے۔\n اس سب کو ایک ساتھ رکھیں اور ہم\nسٹرنگ فنکشن، انٹ فنکشن اور فلوٹ فنکشن کا استعمال کرتے ہوئے ویلیو کاسٹ کر سکتے ہیں۔ اس کے علاوہ، نوٹ کریں، ایک bool فنکشن ہے جو اقدار کو بولین میں تبدیل کرتا ہے۔ اگر ہم کوشش کرتے ہیں اور ایسی اقدار کاسٹ کرتے ہیں جن کا کوئی\nمطلب نہیں، جیسا کہ آپ نے دیکھا، تو ہمیں قدر کی خرابی ملتی ہے۔ یہ اس طرح ہے جیسے میں نے\nسٹرنگ کیلے کو انٹیجر یا\nسٹرنگ 9.9.9 کو فلوٹ پر ڈالنے کی کوشش کی۔ یہ\nکسی بھی معنی خیز طریقے سے ممکن نہیں ہے۔ کیلے کو بطور عدد کیا ہونا چاہیے؟ مجھ نہیں پتہ۔ اب انٹیجر پر فلوٹ ڈالنے کے بارے میں کیا خیال ہے\n؟ یہ پتہ چلتا ہے کہ یہ صرف\nاعشاریہ حصے کو کاٹتا ہے۔ تو 3.8 تین بن جاتا ہے۔ ہم منزل لے رہے ہیں، یا\nنچلا قریب ترین عدد۔ لہذا اگلی بار جب آپ کو\nاپنے پروگرام میں ٹائپ ایرر نظر آئے تو اپنے ایکسپریشنز میں ڈیٹا کی اقسام کو چیک کریں اور یقینی بنائیں کہ وہ\nسٹرنگز اور انٹیجر اور فلوٹس کو انٹیجرز اور فلوٹس کے ساتھ ملاتے ہیں۔ اگر آپ کو ان اقدار کو\nمختلف ڈیٹا کی قسم کی ضرورت ہے، تو آپ انہیں ہمیشہ کاسٹ کر سکتے ہیں۔",
    "t_spanish": "- [Instructor] ¿Alguna vez ha\nintentado hacer que su salida impresa sea un poco más descriptiva como\nesta, solo para obtener un error tipográfico?  ¿ Por qué sucede eso y cómo lo solucionamos? Pongamos a trabajar nuestras habilidades de depuración. Vimos que mi programa funcionó por última vez cuando estaba imprimiendo\nla puntuación promedio. Solo cuando intenté\nagregar esta cadena al frente comencé a recibir un error. Este mensaje de error me dice que\nla computadora tiene problemas para concatenar una cadena con un flotante.  La puntuación promedio de mi prueba es una cadena, y la puntuación promedio variable\ncontiene el valor 89,5, que es un valor flotante, y sabemos que las computadoras no pueden sumar\ncadenas y elementos flotantes juntos. Solo pueden concatenar\ncadenas y cadenas o agregar alguna combinación\nde números enteros y flotantes. Bien, sabemos por qué\nrecibimos ese error, pero ¿qué podemos hacer al respecto? Nosotros, como programadores, necesitamos\nayudar a la computadora. La computadora es muy obstinada\nen cuanto a la coincidencia de sus tipos de datos, y no podemos cambiar eso, pero podemos cambiar nuestros valores\npara que sean tipos de datos diferentes. Esto se llama\nconversión de tipos, donde convertimos o convertimos un valor de un\ntipo de datos a otro tipo de datos. Para convertir un valor a una cadena,\nusamos la función de cadena. Recuerde que una función\ntoma un valor de entrada, realiza algunas acciones sobre él y luego devuelve un valor de salida. Con la función de cadena,\nnuestro valor de entrada es el valor que queremos convertir en una\ncadena y nuestro valor de salida es ese valor de entrada como una cadena. Convertir un flotante o un número entero a una cadena es bastante sencillo. Es como si lo\npusiéramos entre comillas. Volviendo a nuestro programa, todo lo que tenemos que hacer es llamar a la\nfunción de cadena con la puntuación promedio. Luego, ese valor flotante 89,5 que contiene la variable de puntuación promedio se convertirá en la cadena 8 9,5. Si ignoramos la variable por\nun segundo, es lo mismo que decir más 89,5, lo que da un\nerror de tipo versus cadena 8 9,5, que no da un error de tipo. Una vez que tenemos esta\nexpresión con dos cadenas, la computadora puede simplemente concatenarlas.  ¿ Qué pasa si quiero ver cómo la puntuación de mi próximo examen afectará mi promedio? Podría agregar un mensaje de entrada aquí para permitirme ingresar diferentes partituras. Así que actualizo el\ncálculo de mi puntuación promedio para incluir esa nueva puntuación y ahora\nrecibo nuevamente un error de tipo. Esto se debe a que el valor de salida que devuelve la función de entrada\nes siempre una cadena, incluso si lo que el usuario escribió\nparece un número. Eso significa que aquí en la\nsegunda línea, cuando intento agregar una nueva partitura, una vez\nmás agrego flotadores y cadenas. En cambio, quiero que la\npuntuación de la prueba sea un número entero para poder hacer algunos cálculos con ella. Para convertir un valor a un número entero,\nusamos la función INT. Si empiezo con un\nvalor de cadena como ocho, nueve y lo convierto en un número entero, en realidad simplemente estoy eliminando las comillas que lo rodean. Ahora tengo 89. ¿ Ves algún problema aquí? Bueno, según las pruebas anteriores, parece que admitimos medios puntos, como 89,5 podría ser una puntuación de prueba y 89,5 es un flotante, no un número entero. Si ingreso 89.5 cuando\nse me solicita, obtenemos un error de valor porque estamos intentando\nconvertir la cadena 8 9.5 a un número entero. Esto significa que probablemente\nno deberíamos realizar la conversión a un número entero. En lugar de eso, deberíamos lanzarlo a un flotador. Para convertir un valor a un flotante,\nusamos la función flotante. También podríamos mover ese encasillamiento aquí arriba, de modo que el valor ya esté\nconvertido a flotante antes de almacenarse en\nla variable nueva puntuación. Entonces no tendremos que acordarnos\nmás adelante de convertir el valor de la nueva puntuación en un flotante\ncada vez que accedamos a él. Junte todo eso y podremos convertir valores\nusando la función de cadena, la función int y la función flotante. Además, tenga en cuenta que existe una función booleana que convierte valores a booleanos. Si intentamos emitir valores\nque simplemente no tienen sentido, como vio, obtenemos un error de valor. Esto es como si intentara\nconvertir la cadena banana en un número entero o la\ncadena 9.9.9 en un flotante. Simplemente no es posible\nde ninguna manera significativa.  ¿ Cómo debería ser el plátano como número entero? No sé. Ahora, ¿qué pasa con la conversión de\nun flotante a un número entero? Resulta que esto simplemente corta\nla porción decimal. Entonces 3,8 se convierte en tres. Estamos tomando la palabra, o\nel número entero inferior más cercano. Entonces, la próxima vez que vea un\nerror de tipo en su programa, verifique los tipos de datos en sus expresiones y asegúrese de que coincidan\ncadenas con cadenas y números enteros y flotantes con enteros y flotantes. Si necesita que esos valores\nsean de un tipo de datos diferente, siempre puede convertirlos.",
    "t_arabic": "- [المدرس] هل سبق لك أن\nحاولت جعل مخرجات الطباعة الخاصة بك أكثر وصفية قليلاً مثل\nهذا، ولكن حصلت على خطأ في الكتابة؟ لماذا يحدث ذلك وكيف نصلحه؟ دعونا نضع مهارات التصحيح لدينا في العمل.  لقد رأينا أن برنامجي كان يعمل آخر مرة عندما كنت أقوم بطباعة\nمتوسط ​​النتيجة. فقط عندما حاولت\nإضافة هذه السلسلة في المقدمة بدأت أتلقى خطأ. تخبرني رسالة الخطأ هذه أن\nالكمبيوتر يواجه مشكلة في ربط سلسلة باستخدام عدد عائم. متوسط ​​درجات الاختبار الخاص بي عبارة عن سلسلة، \nويحتوي متوسط ​​الدرجات المتغيرة على القيمة 89.5، وهي عبارة عن عدد عشري، ونحن نعلم أن أجهزة الكمبيوتر لا يمكنها إضافة\nسلاسل وأرقام عائمة معًا. يمكنهم فقط ربط\nالسلاسل والسلاسل أو إضافة مجموعة\nمن الأعداد الصحيحة والعوامات. حسنًا، نحن نعرف سبب\nحصولنا على هذا الخطأ، ولكن ماذا يمكننا أن نفعل حيال ذلك؟ نحن، كمبرمجين، نحتاج\nإلى مساعدة الكمبيوتر هنا. الكمبيوتر عنيد جدًا\nفيما يتعلق بمطابقة أنواع البيانات الخاصة به، ولا يمكننا تغيير ذلك، ولكن يمكننا تغيير قيمنا\nلتكون أنواع بيانات مختلفة. وهذا ما يسمى \"\nصب النوع\" حيث نقوم بتحويل أو تحويل قيمة من\nنوع بيانات إلى نوع بيانات آخر. لإرسال قيمة إلى سلسلة،\nنستخدم دالة السلسلة. تذكر أن الدالة\nتأخذ قيمة مدخلة، وتنفذ بعض الإجراءات عليها، ثم تقوم بإرجاع قيمة الإخراج. باستخدام دالة السلسلة،\nقيمة الإدخال لدينا هي القيمة التي نريد إرسالها إلى\nسلسلة، وقيمة الإخراج لدينا هي قيمة الإدخال كسلسلة.  يعد إرسال عدد عائم أو عدد صحيح إلى سلسلة أمرًا بسيطًا جدًا. يبدو الأمر كما لو أننا وضعنا\nعلامات الاقتباس حولها. بالعودة إلى برنامجنا، كل ما علينا فعله هو استدعاء دالة السلسلة\nللحصول على متوسط ​​النقاط. بعد ذلك، سيتم تحويل القيمة العائمة 89.5 التي يحتوي عليها متغير متوسط ​​النتيجة إلى السلسلة 8 9.5. إذا تجاهلنا المتغير\nلثانية واحدة، فهذا هو نفس قول زائد 89.5، والذي يعطي\nخطأ في النوع مقابل السلسلة 8 9.5، والتي لا تعطي خطأ في النوع. بمجرد أن يكون لدينا هذا\nالتعبير بسلسلتين، يمكن للكمبيوتر وصلهما فقط.  ماذا لو كنت أريد أن أرى كيف ستؤثر نتيجة الاختبار التالي على متوسطي؟ يمكنني إضافة مطالبة إدخال هنا للسماح لي بالدخول في درجات مختلفة. لذلك قمت بتحديث\nحساب متوسط ​​درجاتي ليشمل تلك النتيجة الجديدة، والآن\nأتلقى خطأً في النوع مرة أخرى. وذلك لأن قيمة الإخراج التي ترجعها وظيفة الإدخال\nهي دائمًا سلسلة حتى لو كان ما كتبه المستخدم\nيبدو كرقم. وهذا يعني هنا في\nالسطر الثاني، عندما أحاول إضافة نتيجة جديدة، أقوم مرة\nأخرى بإضافة العوامات والسلاسل. وبدلاً من ذلك، أريد أن\nتكون نتيجة الاختبار عددًا صحيحًا حتى أتمكن من إجراء بعض العمليات الحسابية باستخدامها. لإرسال قيمة إلى عدد صحيح،\nنستخدم الدالة INT. إذا بدأت بقيمة سلسلة\nمثل ثمانية، تسعة، وقمت بتحويلها إلى عدد صحيح، فأنا أقوم فقط بإزالة علامات الاقتباس حولها. إذن لدي الآن 89. هل ترى أي مشاكل هنا؟ حسنًا، استنادًا إلى الاختبارات السابقة، يبدو أننا ندعم نصف النقاط، مثل 89.5 قد تكون نتيجة اختبار، و89.5 عبارة عن عدد عائم وليس عددًا صحيحًا. إذا أدخلت 89.5 في\nالموجه، فسنحصل على خطأ في القيمة لأننا نحاول\nتحويل السلسلة 8 9.5 إلى عدد صحيح. هذا يعني أننا ربما\nلا ينبغي أن نلقي نظرة على عدد صحيح. بدلا من ذلك، ينبغي لنا أن نلقي إلى تعويم. لإرسال قيمة إلى عدد عائم،\nنستخدم الدالة float. قد نقوم أيضًا بنقل هذا النوع من الكتابة إلى الأعلى هنا، بحيث يتم تحويل القيمة بالفعل\nإلى قيمة عائمة قبل تخزينها في\nالنتيجة الجديدة المتغيرة. ثم لا يتعين علينا أن نتذكر\nلاحقًا تحويل قيمة النتيجة الجديدة إلى تعويم\nفي أي وقت نصل إليه. ضع كل ذلك معًا ويمكننا إنشاء القيم\nباستخدام دالة السلسلة، والدالة int، والدالة العائمة. لاحظ أيضًا أن هناك دالة منطقية تقوم بتحويل القيم إلى قيم منطقية. إذا حاولنا وضع قيم\nغير منطقية، كما رأيت، فسنحصل على خطأ في القيمة. هذا يشبه ما إذا حاولت\nإرسال سلسلة الموز إلى عدد صحيح أو\nالسلسلة 9.9.9 إلى عدد عائم. هذا غير ممكن\nبأي طريقة ذات معنى. مثل ماذا يجب أن يكون الموز كعدد صحيح؟ لا أعرف. الآن ماذا عن صب\nالعوامة على عدد صحيح؟ اتضح أن هذا مجرد قطع\nالجزء العشري. إذن، ٣٫٨ يصبح ثلاثة. نحن نأخذ الكلمة، أو\nالعدد الصحيح الأقرب. لذا، في المرة القادمة التي ترى فيها\nخطأً في الكتابة في برنامجك، تحقق من أنواع البيانات في تعبيراتك وتأكد من أنها تطابق\nالسلاسل مع السلاسل والأعداد الصحيحة والأعداد الصحيحة والأعداد العائمة. إذا كنت تريد أن تكون هذه القيم من\nنوع بيانات مختلف، فيمكنك دائمًا تحويلها.",
    "t_italian": "- [Istruttore] Hai mai\nprovato a rendere il tuo output di stampa un po' più descrittivo in\nquesto modo, solo per ottenere un errore di tipo? Perché ciò accade e come possiamo risolverlo? Mettiamo a frutto le nostre capacità di debug. Abbiamo visto che il mio programma ha funzionato l'ultima volta quando stavo semplicemente stampando\nil punteggio medio. È solo quando ho provato ad\naggiungere questa stringa in primo piano che ho iniziato a ricevere un errore. Questo messaggio di errore mi dice che\nil computer ha problemi a concatenare una stringa con un float.  Il punteggio medio del mio quiz è una stringa e il punteggio medio variabile\ncontiene il valore 89,5, che è un float, e sappiamo che i computer non possono sommare\nstringhe e float insieme. Possono solo concatenare\nstringhe e stringhe o aggiungere una combinazione\ndi numeri interi e numeri in virgola mobile. Ok, quindi sappiamo perché\nriceviamo questo errore, ma cosa possiamo fare al riguardo? Noi, come programmatori, dobbiamo\naiutare il computer qui. Il computer è molto ostinato\nriguardo alla corrispondenza dei tipi di dati e non possiamo cambiarlo, ma possiamo modificare i nostri valori\nin modo che siano tipi di dati diversi. Questo è chiamato\ncast di tipo in cui convertiamo o trasmettiamo un valore da un\ntipo di dati a un altro tipo di dati. Per trasmettere un valore a una stringa,\nutilizziamo la funzione stringa. Ricorda che una funzione\naccetta un valore di input, esegue alcune azioni su di esso e quindi restituisce un valore di output. Con la funzione stringa,\nil nostro valore di input è il valore che vogliamo convertire in una\nstringa e il nostro valore di output è quel valore di input come stringa. Convertire un float o un intero in una stringa è piuttosto semplice. È come se lo mettessimo\ntra virgolette. Tornando al nostro programma, tutto ciò che dobbiamo fare è chiamare la\nfunzione di stringa sul punteggio medio. Quindi il valore float 89,5 contenuto nella variabile del punteggio medio verrà convertito nella stringa 8 9,5. Se ignoriamo la variabile per\nun secondo, equivale a dire più 89.5, che dà un\nerrore di tipo rispetto alla stringa 8 9.5, che non dà un errore di tipo. Una volta ottenuta questa\nespressione con due stringhe, il computer può semplicemente concatenarle. Cosa succede se voglio vedere come il punteggio del mio prossimo quiz influenzerà la mia media? Potrei aggiungere qui una richiesta di input per consentirmi di inserire punteggi diversi. Quindi aggiorno il\ncalcolo del punteggio medio per includere il nuovo punteggio e ora\nricevo di nuovo un errore di tipo. Questo perché il valore di output restituito dalla funzione di input\nè sempre una stringa, anche se ciò che l'utente ha digitato\nassomiglia a un numero. Ciò significa che qui sulla\nseconda riga, quando provo ad aggiungere una nuova partitura,\naggiungo ancora una volta float e stringhe. Invece, voglio che il\npunteggio del quiz sia un numero intero in modo da poterci fare un po' di calcoli. Per convertire un valore in un numero intero,\nutilizziamo la funzione INT. Se inizio con un\nvalore di stringa come otto, nove e lo trasformo in un numero intero, in realtà sto semplicemente rimuovendo le virgolette attorno ad esso. Quindi ora ne ho 89. Vedi qualche problema qui? Bene, in base ai quiz precedenti, sembra che supportiamo i mezzi punti, come 89,5 potrebbe essere un punteggio del quiz e 89,5 è un numero in virgola mobile, non un numero intero. Se inserisco 89.5 al\nprompt, otteniamo un errore di valore perché stiamo tentando di\nconvertire la stringa 8 9.5 in un numero intero. Ciò significa che probabilmente\nnon dovremmo eseguire il casting su un numero intero. Dovremmo invece lanciare un float. Per trasmettere un valore a un float,\nutilizziamo la funzione float. Potremmo anche spostare qui il typecast, in modo che il valore sia già\nconvertito in float prima di essere memorizzato nella\nvariabile new score. Quindi non dobbiamo ricordarci\nin seguito di trasmettere il valore del nuovo punteggio a un float\nogni volta che accediamo ad esso. Metti tutto insieme e possiamo eseguire il cast dei valori\nutilizzando la funzione string, la funzione int e la funzione float. Inoltre, nota che esiste una funzione booleana che converte i valori in booleani. Se proviamo a lanciare valori\nche semplicemente non hanno senso, come hai visto, otteniamo un errore di valore. È come se provassi\na trasformare la stringa banana in un numero intero o la\nstringa 9.9.9 in un float. Semplicemente non è possibile\nin alcun modo significativo. Ad esempio, cosa dovrebbe essere la banana come numero intero?  Non lo so . E che ne dici di trasformare\nun float in un numero intero?  Si scopre che questo elimina semplicemente\nla parte decimale. Quindi 3,8 diventa tre. Prendiamo la parola, o\nil numero intero più vicino. Quindi la prossima volta che vedi un\nerrore di tipo nel tuo programma, controlla i tipi di dati nelle tue espressioni e assicurati che corrispondano a\nstringhe con stringhe e numeri interi e float con numeri interi e float. Se hai bisogno che questi valori\nsiano di un tipo di dati diverso, puoi sempre trasmetterli."
}
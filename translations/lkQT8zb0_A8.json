{
    "source": "lkQT8zb0_A8",
    "youtubelink": "https://www.youtube.com/watch?v=lkQT8zb0_A8",
    "t_english": "- [Instructor] Programs manipulate data in the forms of integers, floats, Booleans, and strings, but how do they manipulate data? Perhaps the most obvious thing we can do here is add values together, but in order to do that, we'll need the plus operator. In programming languages, operators are symbols that act on values. For example, here we have the value five, which is an integer, the operator plus, and the value two, which is also an integer. Together, these form an expression. You can think of an expression like a phrase, it's not quite a sentence but it combines words together in a meaningful way. When a computer encounters an expression in a program, it will try and evaluate that expression down to a single value. Think, evaluate, single value. This is similar to humans. When you saw the expression five plus two, you probably did that calculation in your head and said, \"Oh, that's seven.\" The computer does the same thing. It tries to put every expression in simplest form, so it's easier for it to work with. So what happens when we add different data types together? An expression that adds an integer and an integer evaluates to an integer. That makes sense because if you add one plus one, you're gonna get two, and two is an integer. You're never gonna get a random fraction that appears out of nowhere, and you're definitely not gonna get a string. When we add two floats together, similarly, we get another float. What happens when we add an integer and a float together? We get a float because if you add one plus 2.5 together, you get 3.5, and 3.5 is a float because it still has that decimal portion. It didn't go anywhere. You're right that two strings make a string, but how? Adding strings is called string concatenation. Concatenating two strings means that we just kind of smoosh them together and then put quotation marks around the whole thing. So the last character of the first string goes right up against the first character of the second string. There's no magic here of inserting spaces or punctuation or anything, so it'll literally just get smooshed right together. Last few odd cases here. What happens if we add an in integer and a string or a float and a string? Turns out that's an error. The computer doesn't know what to do with that. Similarly, I wouldn't know what to do with that. If you asked me to add a word and a number together, I'd be like, \"Huh, what?\" The computer has that same kind of reaction. It just kind of throws its hand up in the air and it's like, \"I don't know,\" and blows up. Last case, what happens when you add Booleans? Turns out this isn't something that programmers do often. So we're not gonna talk about it too much here, but if you're curious, try it out. Let's write our first expressions in the code editor itself. We're gonna start with the line 99 plus a hundred. Now, it's probably obvious that this expression should evaluate to 199, but let's run the program and see what the computer says. Huh. Nothing. Why isn't it telling us the answer? Turns out computers are pretty literal creatures. You can think about it like a stubborn, younger sibling. You're like, \"Will you evaluate this expression?\" And the computer's like, \"Yes.\" And you're like, \"Okay, well what is it?\" And it's like, \"Well, you asked me will I evaluate it, and I did. You didn't ask me, will you tell me what this expression evaluates to?\" To add that extra instruction to ask the computer to tell us the result, we need to use the print function. The print function is the instruction that says, \"Display whatever's inside these parentheses in the console.\" We can print single values, like, we could print eight or print hello or print 56.34, or we can print the result of an expression. So if we put an expression inside the parentheses here, the computer's going to evaluate this expression down to a single value first, and then print that result in the console. So let's try this again. We have print 99 plus a hundred, and if we run the program now we see 199 show up because we asked the computer to tell us the result. I can do this again with a few other expressions, and you can see each time I hit Run, we see the results of those expression, what those expressions evaluate to, show up in the console. Some quick things to pay attention to here. Notice that I put each instruction on a separate line. The computer gets confused if I tell it to do multiple things at once. I can't put print here and print here. If I try running that, it blows up. Every time we have a new instruction, in this case a new expression or a new print function, it needs to go on a separate line. Also, note that the output in the console corresponds to the order in which the print functions appear in the program. That's because the computer is going through the program in order, and the value for each of these print functions appears on a separate line in the console. So each time it prints a value, it's skipping to the next line in the console and printing that value on a line all by itself. Now you try. Open up the code editor and experiment with evaluating some expressions of your own and printing the results.\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n",
    "t_urdu": "- [انسٹرکٹر] پروگرام\nڈیٹا کو انٹیجرز، فلوٹس،\nبولین اور سٹرنگز کی شکل میں ہیر پھیر کرتے ہیں، لیکن وہ ڈیٹا کو کیسے جوڑتے ہیں؟ شاید سب سے واضح چیز جو ہم یہاں کر سکتے ہیں وہ ہے اقدار کو ایک ساتھ شامل کرنا، لیکن ایسا کرنے کے لیے،\nہمیں پلس آپریٹر کی ضرورت ہوگی۔ پروگرامنگ زبانوں میں، آپریٹرز وہ علامتیں ہیں جو اقدار پر عمل کرتی ہیں۔ مثال کے طور پر، یہاں ہمارے پاس ویلیو پانچ ہے، جو ایک عدد ہے، آپریٹر پلس، اور قدر دو، جو کہ\nایک عدد بھی ہے۔ یہ مل کر ایک اظہار بناتے ہیں۔ آپ\nکسی فقرے کی طرح اظہار خیال کر سکتے ہیں، یہ کافی جملہ نہیں ہے لیکن یہ الفاظ کو\nبامعنی انداز میں جوڑتا ہے۔ جب کمپیوٹر کا\nکسی پروگرام میں کسی اظہار کا سامنا ہوتا ہے، تو وہ اس اظہار کو ایک ہی قدر تک جانچنے کی کوشش کرے گا۔ سوچیں، اندازہ کریں، واحد قدر۔ یہ انسانوں سے ملتا جلتا ہے۔ جب آپ نے پانچ جمع دو کا اظہار دیکھا تو شاید آپ نے وہ\nحساب اپنے سر میں کیا اور کہا، \"اوہ، یہ سات ہے۔\" کمپیوٹر بھی ایسا ہی کرتا ہے۔ یہ ہر\nاظہار کو آسان ترین شکل میں ڈالنے کی کوشش کرتا ہے، لہذا اس کے ساتھ کام کرنا آسان ہے۔ تو کیا ہوتا ہے جب ہم\nمختلف ڈیٹا کی اقسام کو ایک ساتھ شامل کرتے ہیں؟ ایک ایسا اظہار جو ایک عدد کو جوڑتا ہے اور ایک عدد ایک عدد کا اندازہ کرتا ہے۔ یہ سمجھ میں آتا ہے کیونکہ\nاگر آپ ایک جمع ایک کا اضافہ کرتے ہیں، تو آپ کو دو ملیں گے،\nاور دو ایک عدد عدد ہے۔ آپ کو کبھی بھی ایسا بے ترتیب\nحصہ نہیں ملے گا جو کہیں سے ظاہر نہ ہو، اور آپ کو یقینی طور پر کوئی\nتار نہیں ملے گا۔ جب ہم دو فلوٹس کو ایک ساتھ جوڑتے ہیں، اسی طرح، ہمیں ایک اور فلوٹ ملتا ہے۔ جب ہم ایک\nانٹیجر اور فلوٹ کو ایک ساتھ جوڑتے ہیں تو کیا ہوتا ہے؟ ہمیں ایک فلوٹ ملتا ہے کیونکہ اگر آپ\nایک جمع 2.5 کو ایک ساتھ جوڑتے ہیں، تو آپ کو 3.5 ملے گا، اور 3.5 ایک فلوٹ ہے کیونکہ اس کا اعشاریہ حصہ باقی ہے۔ یہ کہیں نہیں گیا۔ آپ ٹھیک کہتے ہیں کہ دو تار\nایک تار بناتے ہیں، لیکن کیسے؟ سٹرنگز کو جوڑنا\nسٹرنگ کنکٹنیشن کہلاتا ہے۔ دو تاروں کو جوڑنے کا مطلب یہ ہے کہ ہم انہیں ایک طرح سے ہموار کرتے ہیں اور پھر\nپوری چیز کے ارد گرد کوٹیشن مارکس لگاتے ہیں۔ تو پہلی سٹرنگ کا آخری کریکٹر دوسری سٹرنگ کے پہلے کردار کے\nبالکل اوپر جاتا ہے۔ \n یہاں خالی جگہوں یا اوقاف یا کچھ بھی ڈالنے کا کوئی جادو نہیں ہے، لہذا یہ لفظی طور پر صرف ایک\nساتھ مل جائے گا۔ یہاں آخری چند عجیب و غریب کیسز۔ کیا ہوتا ہے اگر ہم\nانٹیجر اور سٹرنگ یا فلوٹ اور سٹرنگ شامل کریں؟ پتہ چلتا ہے کہ یہ ایک غلطی ہے۔ کمپیوٹر نہیں جانتا کہ\nاس کے ساتھ کیا کرنا ہے۔ اسی طرح، میں نہیں\nجانتا کہ اس کے ساتھ کیا کرنا ہے. اگر آپ نے مجھ سے ایک\nلفظ اور نمبر ایک ساتھ شامل کرنے کو کہا تو میں اس طرح کہوں گا، \"ہہ، کیا؟\" کمپیوٹر میں بھی\nاسی قسم کا ردعمل ہوتا ہے۔ یہ صرف ایک طرح سے\nاپنا ہاتھ ہوا میں پھینکتا ہے اور یہ اس طرح ہے، \"میں نہیں\nجانتا،\" اور اڑا دیتا ہے۔ آخری کیس،\nجب آپ بولین کو شامل کرتے ہیں تو کیا ہوتا ہے؟ پتہ چلتا ہے کہ یہ وہ چیز نہیں ہے\nجو پروگرامرز اکثر کرتے ہیں۔ لہذا ہم\nیہاں اس کے بارے میں زیادہ بات نہیں کریں گے، لیکن اگر آپ جاننا چاہتے ہیں، تو اسے آزمائیں۔ آئیے اپنے پہلے تاثرات\nکوڈ ایڈیٹر میں ہی لکھتے ہیں۔ ہم\nلائن 99 جمع سو سے شروع کرنے والے ہیں۔ اب، یہ شاید واضح ہے کہ اس اظہار کا\nاندازہ 199 ہونا چاہیے، لیکن آئیے پروگرام کو چلائیں اور\nدیکھیں کہ کمپیوٹر کیا کہتا ہے۔ ہہ  کچھ بھی نہیں۔ یہ ہمیں جواب کیوں نہیں بتا رہا ہے؟ پتہ چلتا ہے کہ کمپیوٹرز\nخوبصورت لفظی مخلوق ہیں۔ آپ اس کے بارے میں\nایک ضدی، چھوٹے بھائی کی طرح سوچ سکتے ہیں۔ آپ اس طرح ہیں، \"کیا آپ\nاس اظہار کا جائزہ لیں گے؟\" اور کمپیوٹر کی طرح، \"ہاں\"۔ اور آپ اس طرح ہیں، \"ٹھیک ہے، یہ کیا ہے؟\" اور یہ اس طرح ہے، \"ٹھیک ہے، آپ نے مجھ سے پوچھا کہ کیا میں اس کا اندازہ کروں گا، اور میں نے کیا۔ آپ نے مجھ سے نہیں پوچھا، کیا آپ مجھے بتائیں گے کہ یہ اظہار کس چیز کی تشخیص کرتا ہے؟\"  کمپیوٹر سے ہمیں نتیجہ بتانے کے لیے اس اضافی ہدایات کو شامل کرنے کے لیے،\n ہمیں\nپرنٹ فنکشن استعمال کرنے کی ضرورت ہے۔ پرنٹ فنکشن وہ ہدایت ہے جو کہتی ہے، \" کنسول میں ان قوسین کے اندر جو کچھ ہے اسے دکھائیں۔\" ہم سنگل ویلیو پرنٹ کر سکتے ہیں، جیسے کہ ہم آٹھ پرنٹ کر سکتے ہیں یا\nہیلو پرنٹ کر سکتے ہیں یا 56.34 پرنٹ کر سکتے ہیں، یا ہم\nکسی ایکسپریشن کا نتیجہ پرنٹ کر سکتے ہیں۔ لہذا اگر ہم یہاں قوسین کے اندر ایک اظہار ڈالتے ہیں، تو\n کمپیوٹر پہلے اس اظہار کو\nایک واحد قدر تک جانچے گا، اور پھر اس نتیجے کو کنسول میں پرنٹ کرے گا۔ تو آئیے اسے دوبارہ آزماتے ہیں۔ ہمارے پاس 99 جمع ایک سو پرنٹ ہے، اور اگر ہم اب پروگرام چلاتے ہیں تو\nہمیں 199 دکھائی دیتے ہیں کیونکہ ہم نے کمپیوٹر سے\nہمیں نتیجہ بتانے کو کہا تھا۔ میں یہ کچھ دوسرے تاثرات کے ساتھ دوبارہ کر سکتا ہوں،\n اور آپ دیکھ سکتے ہیں کہ جب بھی میں رن کو مارتا ہوں، ہم ان تاثرات کے نتائج دیکھتے ہیں، ان تاثرات کا کیا اندازہ ہوتا ہے،\nکنسول میں ظاہر ہوتا ہے۔ \nیہاں پر توجہ دینے کے لئے کچھ فوری چیزیں۔ نوٹ کریں کہ میں نے ہر\nہدایت کو الگ لائن پر رکھا ہے۔ کمپیوٹر الجھن میں پڑ جاتا ہے اگر میں اسے ایک ساتھ کئی کام کرنے کو کہوں۔ میں یہاں پرنٹ نہیں رکھ سکتا اور یہاں پرنٹ نہیں کر سکتا۔ اگر میں اسے چلانے کی کوشش کرتا ہوں تو یہ اڑا دیتا ہے۔ جب بھی ہمارے پاس کوئی نئی ہدایت آتی ہے، اس صورت میں ایک نیا اظہار\nیا ایک نیا پرنٹ فنکشن، اسے الگ لائن پر جانے کی ضرورت ہوتی ہے۔  یہ بھی نوٹ کریں کہ کنسول میں آؤٹ پٹ اس ترتیب سے مطابقت رکھتا ہے جس میں پرنٹ فنکشن پروگرام میں ظاہر ہوتے ہیں۔ اس کی وجہ یہ ہے کہ کمپیوٹر ترتیب سے\nپروگرام سے گزر رہا ہے، اور ان میں سے\nہر ایک پرنٹ فنکشن کی قدر کنسول میں الگ لائن پر ظاہر ہوتی ہے۔ لہذا جب بھی یہ ایک قدر پرنٹ کرتا ہے، یہ\nکنسول میں اگلی لائن پر جا رہا ہے اور اس قدر کو\nخود ہی ایک لائن پر پرنٹ کر رہا ہے۔ اب آپ کوشش کریں۔ کوڈ ایڈیٹر کھولیں اور\n اپنے کچھ تاثرات کا جائزہ لینے\nاور نتائج پرنٹ کرنے کے ساتھ تجربہ کریں۔",
    "t_spanish": "- [Instructor] Los programas\nmanipulan datos en forma de números enteros, flotantes,\nbooleanos y cadenas, pero ¿cómo manipulan los datos? Quizás lo más obvio que podemos hacer aquí es sumar valores, pero para hacerlo\nnecesitaremos el operador más. En los lenguajes de programación, los operadores son símbolos que actúan sobre valores. Por ejemplo, aquí tenemos el valor cinco, que es un número entero, el operador más y el valor dos, que\ntambién es un número entero. Juntos, estos forman una expresión. Puedes pensar en una\nexpresión como una frase; no es exactamente una oración, pero combina palabras\nde manera significativa. Cuando una computadora encuentra\nuna expresión en un programa, intentará evaluar esa expresión hasta reducirla a un solo valor. Pensar, evaluar, valor único. Esto es similar a los humanos. Cuando viste la expresión cinco más dos, probablemente hiciste ese\ncálculo mental y dijiste: \"Oh, eso es siete\". La computadora hace lo mismo. Intenta poner cada\nexpresión en la forma más simple, para que sea más fácil trabajar con ella. Entonces, ¿qué sucede cuando sumamos\ndiferentes tipos de datos? Una expresión que suma un número entero y un número entero se evalúa como un número entero. Eso tiene sentido porque\nsi sumas uno más uno, obtendrás dos,\ny dos es un número entero. Nunca obtendrás una\nfracción aleatoria que aparezca de la nada, y definitivamente\nno obtendrás una cadena. Cuando sumamos dos flotadores, de manera similar, obtenemos otro flotador.  ¿ Qué sucede cuando sumamos un\nnúmero entero y un flotante? Obtenemos un flotante porque si\nsumas uno más 2,5, obtienes 3,5, y 3,5 es un flotante porque todavía tiene esa porción decimal. No llegó a ninguna parte. Tienes razón en que dos hilos\nforman un hilo, pero ¿cómo? Agregar cadenas se llama\nconcatenación de cadenas. Concatenar dos cadenas significa que simplemente las juntamos y luego ponemos comillas\nalrededor de todo. Entonces, el último carácter de la\nprimera cadena va directamente al primer carácter\nde la segunda cadena. Aquí no hay magia para insertar espacios o puntuación ni nada, así que literalmente todo se combinará\n. Últimos casos extraños aquí.  ¿ Qué pasa si sumamos un\nnúmero entero y una cadena o un flotante y una cadena? Resulta que es un error. La computadora no sabe\nqué hacer con eso. Del mismo modo, no\nsabría qué hacer con eso. Si me pidieran que sumara una\npalabra y un número, diría: \"¿Eh, qué?\" La computadora tiene el\nmismo tipo de reacción. Simplemente levanta la\nmano en el aire y dice: \"No lo\nsé\" y explota. Último caso, ¿qué sucede\ncuando agregas booleanos? Resulta que esto no es algo\nque los programadores hagan con frecuencia. Así que no hablaremos\nmucho de ello aquí, pero si tienes curiosidad, pruébalo. Escribamos nuestras primeras expresiones\nen el propio editor de código. Empezaremos con la\nlínea 99 más cien. Ahora, probablemente sea obvio que esta expresión\ndebería evaluarse como 199, pero ejecutemos el programa y\nveamos qué dice la computadora. Eh.  Nada.  ¿ Por qué no nos dice la respuesta? Resulta que las computadoras son\ncriaturas bastante literales. Puedes pensar en ello como si fuera\nun hermano menor y testarudo. Dices: \"¿\nEvaluarás esta expresión?\" Y la computadora dice: \"Sí\". Y dices: \"Está bien, ¿qué es?\" Y es como, \"Bueno, me preguntaste si lo evaluaría, y lo hice. No me preguntaste, ¿me dirás qué evalúa esta expresión?\". Para agregar esa instrucción adicional\npara pedirle a la computadora que nos diga el resultado, necesitamos\nusar la función de impresión. La función de impresión es la instrucción que dice: \"Muestre lo que esté dentro de estos paréntesis en la consola\". Podemos imprimir valores únicos, como ocho,\nhola, 56,34, o podemos imprimir el\nresultado de una expresión. Entonces, si ponemos una expresión\ndentro del paréntesis aquí, la computadora primero evaluará esta expresión hasta\nun solo valor y luego imprimirá ese resultado en la consola. Así que intentemos esto de nuevo. Hemos impreso 99 más cien, y si ejecutamos el programa\nahora vemos que aparece 199 porque le pedimos a la computadora\nque nos dijera el resultado. Puedo hacer esto nuevamente con\nalgunas otras expresiones, y pueden ver cada vez que presiono Ejecutar, vemos los resultados de esas expresiones, cómo se evalúan esas expresiones, que\naparecen en la consola. Algunas cosas rápidas a las que\nprestar atención aquí. Observe que puse cada\ninstrucción en una línea separada. La computadora se confunde si le digo que haga varias cosas a la vez. No puedo poner imprimir aquí e imprimir aquí. Si intento ejecutarlo, explota. Cada vez que tenemos una nueva instrucción, en este caso una nueva expresión\no una nueva función de impresión, debe ir en una línea separada. Además, tenga en cuenta que la salida en la consola corresponde al orden en que aparecen las funciones de impresión en el programa. Esto se debe a que la computadora\nejecuta el programa en orden y el valor de\ncada una de estas funciones de impresión aparece en una línea separada en la consola. Entonces, cada vez que imprime un valor, salta a la\nsiguiente línea en la consola e imprime ese valor\nen una línea por sí solo. Ahora tu intenta. Abra el editor de código y\nexperimente evaluando algunas expresiones propias\ne imprimiendo los resultados.",
    "t_arabic": "- [المدرس]\nتتعامل البرامج مع البيانات في أشكال الأعداد الصحيحة والأعداد العشرية والقيم\nالمنطقية والسلاسل، ولكن كيف تتعامل مع البيانات؟ ربما يكون الأمر الأكثر وضوحًا الذي يمكننا القيام به هنا هو جمع القيم معًا، ولكن للقيام بذلك،\nسنحتاج إلى عامل التشغيل plus. في لغات البرمجة، العوامل هي رموز تعمل على القيم. على سبيل المثال، لدينا هنا القيمة خمسة، وهي عدد صحيح، وعامل التشغيل زائد، والقيمة اثنين،\nوهي أيضًا عدد صحيح. وتشكل هذه معًا تعبيرًا. يمكنك التفكير في\nالتعبير على أنه عبارة، فهو ليس جملة تمامًا ولكنه يجمع الكلمات\nمعًا بطريقة ذات معنى. عندما يواجه الكمبيوتر\nتعبيرًا في أحد البرامج، فإنه سيحاول تقييم هذا التعبير وصولاً إلى قيمة واحدة. فكر، قيم، قيمة واحدة. وهذا مشابه للبشر. عندما رأيت التعبير خمسة زائد اثنين، ربما قمت بهذه\nالعملية الحسابية في رأسك وقلت، \"أوه، هذا سبعة.\" الكمبيوتر يفعل نفس الشيء. فهو يحاول وضع كل\nتعبير في أبسط أشكاله، بحيث يسهل عليه التعامل معه. إذن ماذا يحدث عندما نضيف\nأنواع بيانات مختلفة معًا؟ تعبير يضيف عددًا صحيحًا ويتم تقييم عدد صحيح إلى عدد صحيح. هذا منطقي لأنه\nإذا أضفت واحدًا زائد واحد، فستحصل على اثنين،\nواثنان عدد صحيح.  لن تحصل أبدًا على\nجزء عشوائي يظهر من العدم، وبالتأكيد\nلن تحصل على خيط. عندما نجمع عائمتين معًا، بالمثل، نحصل على عوامة أخرى. ماذا يحدث عندما نجمع\nعددًا صحيحًا وعددًا عائمًا معًا؟ نحصل على عدد عائم لأنه إذا\nأضفت واحدًا زائد 2.5 معًا، فستحصل على 3.5، و3.5 عدد عائم لأنه لا يزال يحتوي على هذا الجزء العشري. لم يذهب إلى أي مكان. أنت على حق في أن سلسلتين\nتشكلان سلسلة، ولكن كيف؟ تسمى إضافة سلاسل\nتسلسل السلسلة. إن تسلسل سلسلتين يعني أننا نقوم بدمجهما معًا ثم نضع علامات الاقتباس\nحول الأمر برمته. لذا فإن الحرف الأخير من\nالسلسلة الأولى يتجه مباشرة إلى الحرف الأول\nمن السلسلة الثانية. ليس هناك سحر هنا لإدراج مسافات أو علامات ترقيم أو أي شيء، لذلك سيتم\nدمجها معًا بشكل حرفي. آخر الحالات القليلة الغريبة هنا. ماذا يحدث إذا أضفنا عددًا\nصحيحًا وسلسلة أو عددًا عائمًا وسلسلة؟ وتبين أن هذا خطأ. الكمبيوتر لا يعرف\nماذا يفعل بهذا. وبالمثل، لا\nأعرف ماذا أفعل بذلك. إذا طلبت مني إضافة\nكلمة ورقم معًا، سأقول، \"هاه، ماذا؟\" الكمبيوتر لديه\nنفس النوع من رد الفعل. إنه مجرد نوع من رفع\nيده في الهواء وكأنه، \"لا\nأعرف\"، ثم ينفجر. الحالة الأخيرة، ماذا يحدث\nعند إضافة القيم المنطقية؟ تبين أن هذا ليس شيئًا\nيفعله المبرمجون كثيرًا. لذلك لن نتحدث\nعنها كثيرًا هنا، ولكن إذا كنت فضوليًا، فجرّبها. لنكتب تعبيراتنا الأولى\nفي محرر الكود نفسه. سنبدأ\nبالسطر 99 زائد مائة. الآن، ربما يكون من الواضح أن هذا التعبير\nيجب أن تصل قيمته إلى 199، ولكن دعونا نشغل البرنامج\nونرى ما يقوله الكمبيوتر. هاه.  لا شئ. لماذا لا يخبرنا بالجواب؟ اتضح أن أجهزة الكمبيوتر\nمخلوقات حرفية جدًا. يمكنك التفكير في الأمر كأنك\nأخ أصغر عنيدًا. أنت مثل، \"هل يمكنك\nتقييم هذا التعبير؟\" والكمبيوتر يقول \"نعم.\" وأنت تقول، \"حسنًا، ما الأمر؟\" ويكون الأمر مثل، \"حسنًا، لقد سألتني هل سأقوم بتقييمه، وقد قمت بذلك. ولم تسألني، هل ستخبرني إلى أي حد يُقيم هذا التعبير؟\" لإضافة تلك التعليمات الإضافية\nلمطالبة الكمبيوتر بإخبارنا بالنتيجة، نحتاج\nإلى استخدام وظيفة الطباعة. وظيفة الطباعة هي التعليمات التي تقول: \"اعرض كل ما هو موجود داخل هذه الأقواس في وحدة التحكم.\" يمكننا طباعة قيم مفردة، مثل طباعة ثمانية أو\nطباعة مرحبًا أو طباعة 56.34، أو يمكننا طباعة\nنتيجة تعبير. لذا، إذا وضعنا تعبيرًا\nداخل الأقواس هنا، فسيقوم الكمبيوتر بتقييم هذا التعبير وصولاً إلى\nقيمة واحدة أولاً، ثم يطبع تلك النتيجة في وحدة التحكم. لذلك دعونا نحاول هذا مرة أخرى.  لقد قمنا بطباعة 99 زائد مائة، وإذا قمنا بتشغيل البرنامج\nالآن نرى 199 تظهر لأننا طلبنا من الكمبيوتر\nأن يخبرنا بالنتيجة. يمكنني القيام بذلك مرة أخرى مع\nبعض التعبيرات الأخرى، ويمكنك أن ترى في كل مرة أضغط فيها على \"تشغيل\"، نرى نتائج هذا التعبير، وما يتم تقييمه بهذه التعبيرات\n، تظهر في وحدة التحكم. بعض الأشياء السريعة التي يجب\nالانتباه إليها هنا. لاحظ أنني وضعت كل\nتعليمات في سطر منفصل. يشعر الكمبيوتر بالارتباك إذا طلبت منه القيام بعدة أشياء في وقت واحد. لا أستطيع وضع الطباعة هنا والطباعة هنا. إذا حاولت تشغيل ذلك، فإنه ينفجر.  في كل مرة يكون لدينا تعليمة جديدة، في هذه الحالة تعبير جديد\nأو وظيفة طباعة جديدة، يجب أن تنتقل إلى سطر منفصل. لاحظ أيضًا أن الإخراج في وحدة التحكم يتوافق مع الترتيب الذي تظهر به وظائف الطباعة في البرنامج. وذلك لأن الكمبيوتر\nيمر عبر البرنامج بالترتيب، وتظهر قيمة\nكل وظيفة من وظائف الطباعة هذه على سطر منفصل في وحدة التحكم. لذلك في كل مرة تقوم فيها بطباعة قيمة، فإنها تنتقل إلى\nالسطر التالي في وحدة التحكم وتطبع تلك القيمة\nعلى السطر بمفردها. حاول انت الآن. افتح محرر التعليمات البرمجية وقم\nبتجربة تقييم بعض التعبيرات الخاصة بك\nوطباعة النتائج.",
    "t_italian": "- [Istruttore] I programmi\nmanipolano i dati sotto forma di numeri interi, float,\nbooleani e stringhe, ma come manipolano i dati? Forse la cosa più ovvia che possiamo fare qui è sommare valori insieme, ma per farlo\navremo bisogno dell'operatore più. Nei linguaggi di programmazione, gli operatori sono simboli che agiscono sui valori. Ad esempio, qui abbiamo il valore cinque, che è un numero intero, l'operatore più e il valore due,\nanch'esso un numero intero. Insieme, questi formano un'espressione. Puoi pensare a\nun'espressione come a una frase: non è proprio una frase ma combina\ninsieme le parole in modo significativo. Quando un computer incontra\nun'espressione in un programma, proverà a valutare quell'espressione fino a un singolo valore. Pensa, valuta, valore singolo. Questo è simile agli umani. Quando hai visto l'espressione cinque più due, probabilmente hai fatto quel\ncalcolo nella tua testa e hai detto: \"Oh, fa sette\". Il computer fa la stessa cosa. Cerca di mettere ogni\nespressione nella forma più semplice, quindi è più facile lavorarci. Quindi cosa succede quando aggiungiamo\ninsieme diversi tipi di dati? Un'espressione che somma un numero intero e un numero intero restituisce un numero intero. Questo ha senso perché\nse sommi uno più uno, otterrai due,\ne due è un numero intero. Non otterrai mai una\nfrazione casuale che appare dal nulla e sicuramente\nnon otterrai una stringa. Quando aggiungiamo due float insieme, allo stesso modo, otteniamo un altro float. Cosa succede quando aggiungiamo\ninsieme un numero intero e un float? Otteniamo un valore in virgola mobile perché se\nsommi uno più 2,5 insieme, ottieni 3,5, e 3,5 è un numero in virgola mobile perché ha ancora quella parte decimale. Non è andato da nessuna parte. Hai ragione nel dire che due corde\nformano una corda, ma come?  L' aggiunta di stringhe è chiamata\nconcatenazione di stringhe. Concatenare due stringhe significa semplicemente unirle insieme e poi inserire\nil tutto tra virgolette. Quindi l'ultimo carattere della\nprima stringa va a confronto con il primo carattere\ndella seconda stringa. Non c'è magia qui nell'inserire spazi o punteggiatura o altro, quindi verrà letteralmente\nmesso insieme. Ultimi casi strani qui. Cosa succede se aggiungiamo un\nintero e una stringa o un float e una stringa? Risulta che è un errore. Il computer non sa\ncosa farsene. Allo stesso modo, non\nsaprei cosa farne. Se mi chiedessi di aggiungere una\nparola e un numero insieme, direi: \"Eh, cosa?\" Il computer ha lo\nstesso tipo di reazione.  Alza semplicemente la\nmano in aria e dice \"Non lo\nso\" ed esplode. Ultimo caso, cosa succede\nquando aggiungi booleani? Si scopre che questo non è qualcosa\nche i programmatori fanno spesso. Quindi non ne\nparleremo troppo qui, ma se sei curioso, provalo. Scriviamo le nostre prime espressioni\nnell'editor di codice stesso. Inizieremo con la\nriga 99 più cento. Ora, probabilmente è ovvio che questa espressione\ndebba restituire 199, ma eseguiamo il programma e\nvediamo cosa dice il computer. Eh.  Niente. Perché non ci dice la risposta? Si scopre che i computer sono\ncreature piuttosto letterali. Puoi pensarci come\nun fratello minore testardo. Dici: \"\nValuterai questa espressione?\" E il computer dice \"Sì\". E tu dici \"Okay, allora di cosa si tratta?\" Ed è come, \"Beh, mi hai chiesto se lo valuterò, e l'ho fatto. Non mi hai chiesto, mi diresti a cosa valuta questa espressione?\" Per aggiungere quell'istruzione extra\nper chiedere al computer di comunicarci il risultato, dobbiamo\nutilizzare la funzione di stampa. La funzione print è l'istruzione che dice: \"Visualizza nella console tutto ciò che c'è dentro queste parentesi\". Possiamo stampare singoli valori, ad esempio potremmo stampare otto o\nstampare ciao o stampare 56.34, oppure possiamo stampare il\nrisultato di un'espressione. Quindi, se inseriamo un'espressione\ntra parentesi qui, il computer valuterà prima questa espressione fino a\nun singolo valore, quindi stamperà il risultato nella console. Quindi proviamolo di nuovo. Abbiamo stampato 99 più cento e se eseguiamo il programma\nora vedremo apparire 199 perché abbiamo chiesto al computer\ndi dirci il risultato. Posso farlo di nuovo con\nalcune altre espressioni e puoi vedere ogni volta che premo Esegui, vediamo i risultati di quelle espressioni, ciò che valutano quelle espressioni\n, visualizzato nella console. Alcune cose veloci a cui\nprestare attenzione qui.  Si noti che ho inserito ciascuna\nistruzione su una riga separata. Il computer si confonde se gli dico di fare più cose contemporaneamente. Non posso mettere stampa qui e stampare qui. Se provo a eseguirlo, esplode. Ogni volta che abbiamo una nuova istruzione, in questo caso una nuova espressione\no una nuova funzione print, è necessario che vada su una riga separata. Inoltre, tieni presente che l'output nella console corrisponde all'ordine in cui le funzioni di stampa appaiono nel programma. Questo perché il computer\nesegue il programma in ordine e il valore di\nciascuna di queste funzioni di stampa appare su una riga separata nella console. Quindi ogni volta che stampa un valore, salta alla\nriga successiva nella console e stampa quel valore\nsu una riga da sola. Ora prova tu. Apri l'editor del codice e\nsperimenta valutando alcune tue espressioni\ne stampando i risultati."
}